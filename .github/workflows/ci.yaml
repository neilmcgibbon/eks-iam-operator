name: Build & Release
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'helm-publish') }}
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v2
      - name: Run Tests
        run: make test
  release:
    name:  Release
    needs: Test
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'helm-publish') }}
    env:
      RELEASE_VERSION: ~
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v2
      - name: Prepare semantic-release
        run: |
          npm install -g --prefix=$HOME/.local \
              semantic-release@18.0.0 \
              @semantic-release/exec@5.0.0 \
              conventional-changelog-conventionalcommits
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          npx --prefix=$HOME/.local semantic-release --dry-run
          if test -f .RELEASE_VERSION; then
            release_version="$(cat .RELEASE_VERSION)"
            echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV
          fi
      - name: Build
        if: env.RELEASE_VERSION != ''
        run: |
          make docker-build
      - name: Release
        if: env.RELEASE_VERSION != ''
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          docker tag controller:latest ghcr.io/neilmcgibbon/eks-iam-operator:latest
          docker tag controller:latest ghcr.io/neilmcgibbon/eks-iam-operator:${RELEASE_VERSION}
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker push ghcr.io/neilmcgibbon/eks-iam-operator:latest
          docker push ghcr.io/neilmcgibbon/eks-iam-operator:${RELEASE_VERSION}
          npx --prefix=$HOME/.local semantic-release
  publish-helm:
    name:  Punlish Helm
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, 'helm-publish') }}
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v2
      - name: Publish
        run: |
          make publish-chart
      
